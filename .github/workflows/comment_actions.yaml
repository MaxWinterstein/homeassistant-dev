name: "Custom / actions"

on:
  issue_comment:
    types: [created]
jobs:
  bump-version:
    if: github.event_name == 'issue_comment' && ( 
          startsWith(github.event.comment.body, '/release')
          || startsWith(github.event.comment.body, '/renovate'
        ) && 
        github.event.comment.user.login == 'MaxWinterstein'
    runs-on: ubuntu-latest

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    steps:

      ## Commons

      - name: Update comment with workflow URL
        run: |
          # Get the current workflow run URL
          RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          # Build the new comment content
          UPDATED_COMMENT="${{ github.event.comment.body }}  
          [Workflow run triggered! ðŸš€](${RUN_URL})"

          # Use curl to update the comment
          curl -X PATCH \
            -H "Authorization: Bearer ${{ secrets.RENOVATE_ACTION }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }} \
            -d "{\"body\": \"${UPDATED_COMMENT}\"}"
              
          # Add rocket reaction
          curl -X POST \
            -H "Authorization: token ${{ secrets.RENOVATE_ACTION }}" \
            -H "Accept: application/vnd.github.squirrel-girl-preview+json" \
            -d '{"content": "rocket"}' \
            https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions


      - name: Checkout code
        uses: actions/checkout@v4

      ## Renovate

      - name: Self-hosted Renovate
        if: startsWith(github.event.comment.body, '/renovate')
        uses: renovatebot/github-action@v40.3.1
        with:
          token: ${{ secrets.RENOVATE_TOKEN }}
          configurationFile: .github/renovate.json
        env:
          RENOVATE_REPOSITORIES: "['${{ github.repository }}']"

    # if: github.event_name == 'issue_comment' && ( 
    #       startsWith(github.event.comment.body, '/release')

      ## Version bump

      - name: Get module
        if: startsWith(github.event.comment.body, '/release')
        id: get_module
        run: |
          comment_body="${{ github.event.comment.body }}"
          if [[ "$comment_body" =~ @release-bot[[:space:]]([a-zA-Z0-9_-]+) ]]; then
            ADDON="${BASH_REMATCH[1]}"
            echo "Mentioned Addon: $ADDON"
            echo "::set-output name=addon::$ADDON"
          else
            echo "No valid command found"
            exit 1
          fi

      - name: Get the pull request details
        if: startsWith(github.event.comment.body, '/release')
        id: pr-details
        run: |
          PR_NUMBER=${{ github.event.issue.number }}
          # Fetch PR details using GitHub API
          PR_DATA=$(gh pr view $PR_NUMBER --json headRefName --jq '.headRefName')
          echo "Branch name: $PR_DATA"
          echo "::set-output name=branch_name::$PR_DATA"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout the pull request branch
        if: startsWith(github.event.comment.body, '/release')
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.pr-details.outputs.branch_name }}
            
      - name: Extract version from config.yaml
        if: startsWith(github.event.comment.body, '/release')
        id: get_version
        uses: mikefarah/yq@v4.44.3  
        with:
          cmd: yq '.version' ${{ steps.get_module.outputs.file_name }}/config.yaml

      - name: Install uv
        if: startsWith(github.event.comment.body, '/release')
        uses: astral-sh/setup-uv@v3
        with:
          # Install a specific version of uv.
          version: "0.4.20"

      - name: Set up Python
        if: startsWith(github.event.comment.body, '/release')
        run: uv python install

      - name: Install the project
        if: startsWith(github.event.comment.body, '/release')
        run: uv sync --all-extras --dev

      - name: Build towncrier
        if: startsWith(github.event.comment.body, '/release')
        run: mv CHANGELOG.md "${{ steps.get_module.outputs.file_name }}/"uv run towncrier build --yes --dir "${{ steps.get_module.outputs.file_name }}/" --version "${{ steps.get_version.outputs.result }}"

      - name: Move file
        if: startsWith(github.event.comment.body, '/release')
        run: mv CHANGELOG.md "${{ steps.get_module.outputs.file_name }}/"

      - name: Push changes
        if: startsWith(github.event.comment.body, '/release')
        uses: stefanzweifel/git-auto-commit-action@v5

      ## Common

      - name: Delete the comment
        run: |
          curl -X DELETE \
          -H "Authorization: token ${{ secrets.RENOVATE_ACTION }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}
