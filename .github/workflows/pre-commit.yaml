name: pre-commit

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  pre-commit:
    runs-on: ubuntu-latest

    steps:
      - uses: pre-commit-ci/lite-action@v1.0.3
        if: always()
# # Step 1: Check out the repository code
# - name: Checkout code
# - uses: actions/checkout@v4

# # Step 2: Set up Python (required by pre-commit)
# - name: Set up Python
#   uses: actions/setup-python@v4
#   with:
#     python-version: '3.9'  # Or your preferred Python version

# # Step 3: Install pre-commit
# - name: Install dependencies
#   run: |
#     python -m pip install --upgrade pip
#     pip install pre-commit

# # Step 4: Run pre-commit hooks and ignore non-zero exit code
# - name: Run pre-commit (ignore exit code)
#   id: run_pre_commit
#   run: |
#     pre-commit run --all-files || true  # Ignore exit code

# # Step 5: Check if any changes were made by pre-commit
# - name: Check for changes
#   run: |
#     git diff --exit-code || echo "Changes detected"
#   id: check_changes

# - uses: EndBug/add-and-commit@v9
#   if: steps.check_changes.outcome == 'success' # Run if changes were detected
#   with:
#     message: Show GitHub logo
#     committer_name: GitHub Actions
#     committer_email: 41898282+github-actions[bot]@users.noreply.github.com

# # # Step 6: Commit and push changes if files were modified
# # - name: Commit and push changes
# #   if: steps.check_changes.outcome == 'success' # Run if changes were detected
# #   run: |
# #     git config --local user.name "GitHub Actions"
# #     git config --local user.email "actions@github.com"
# #     git add .
# #     git commit -m "chore: pre-commit auto-fix"
# #     git push origin ${{ github.ref }}
# #   env:
# #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
